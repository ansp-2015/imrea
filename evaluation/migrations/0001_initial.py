# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import evaluation.models.eeg


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BostonAphasia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('write_or_distribute_card_deck_left_hand', models.IntegerField(verbose_name='Write or distribute a card deck')),
                ('write_or_distribute_card_deck_right_hand', models.IntegerField(verbose_name='Write or distribute a card deck')),
            ],
            options={
                'ordering': ['patient'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Clin',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('neglect_1a', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_1b', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_1c', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_1d', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_2a', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_2b', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_2c', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_2d', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_3a', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_3b', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_3c', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_3d', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_4a', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_4b', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_4c', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('neglect_4d', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
            ],
            options={
                'ordering': ['patient'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Eeg',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('eegtitle', models.CharField(max_length=250)),
                ('eegfile', models.FileField(upload_to=evaluation.models.eeg.user_directory_path)),
            ],
            options={
                'ordering': ['patient'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FIM',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('self_care_eating', models.IntegerField(verbose_name='Eating', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('self_care_grooming', models.IntegerField(verbose_name='Grooming', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('self_care_bathing', models.IntegerField(verbose_name='Bathing/showering', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('self_care_dressing_upper_body', models.IntegerField(verbose_name='Dressing upper body', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('self_care_dressing_lower_body', models.IntegerField(verbose_name='Dressing lower body', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('self_care_toileting', models.IntegerField(verbose_name='Toileting', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('sphincter_bladder_mgt', models.IntegerField(verbose_name='Bladder management', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('sphincter_bowel_mgt', models.IntegerField(verbose_name='Bowel management', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('transfer_wheelchair', models.IntegerField(verbose_name='Transfers bed/chair/wheelchair', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('transfer_toilet', models.IntegerField(verbose_name='Transfers toilet', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('transfer_shower', models.IntegerField(verbose_name='Transfers bathtub/shower', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('locomotion_wheelchair', models.IntegerField(verbose_name='Locomotion walking/wheelchair', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
                ('locomotion_stairs', models.IntegerField(verbose_name='Locomotion stairs', choices=[(1, 'Total assistance'), (2, 'Maximal assistance'), (3, 'Moderate assistance'), (4, 'Minimal assistance'), (5, 'Supervision'), (6, 'Modified independence'), (7, 'Complete independence')])),
            ],
            options={
                'verbose_name': 'FIM',
                'verbose_name_plural': 'FIMs',
            },
        ),
        migrations.CreateModel(
            name='FuglMeyer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('ue_reflex_activity_flex', models.IntegerField(verbose_name='Flexors: biceps and finger flexors', choices=[(0, 'No reflex activity can be elicited'), (2, 'Reflex activity can be elicited')])),
                ('ue_reflex_activity_ext', models.IntegerField(verbose_name='Extensors: triceps', choices=[(0, 'No reflex activity can be elicited'), (2, 'Reflex activity can be elicited')])),
                ('ue_vol_mov_syn_flex_shoulder_retrac', models.IntegerField(verbose_name='Shoulder retraction', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_flex_shoulder_elev', models.IntegerField(verbose_name='Shoulder elevation', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_flex_shoulder_abd', models.IntegerField(verbose_name='Shoulder abduction (90)', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_flex_shoulder_rot', models.IntegerField(verbose_name='Shoulder external rotation', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_flex_elbow_flex', models.IntegerField(verbose_name='Elbow flexion', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_flex_forearm_sup', models.IntegerField(verbose_name='Forearm supination', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_flex_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('ue_vol_mov_syn_ext_shoulder', models.IntegerField(verbose_name='shoulder adduction / internal rotation', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_ext_elbow', models.IntegerField(verbose_name='elbow extension', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_ext_forearm', models.IntegerField(verbose_name='forearm pronation', choices=[(0, 'Cannot be performed at all'), (1, 'Performed partly'), (2, 'Performed faultlessly')])),
                ('ue_vol_mov_syn_ext_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('ue_vol_mov_mix_hand_spine', models.IntegerField(verbose_name='Hand to lumbar spine', choices=[(0, 'No specific action is performed (or patient moves but does not reach ASIS)'), (1, ' Hand must pass anterior superior iliac spine (performed partly)'), (2, ' Performed faultlessly (patient clears ASIS and can extend arm behind back towards sacrum')])),
                ('ue_vol_mov_mix_shoulder_flex', models.IntegerField(verbose_name='Shoulder flexion 0-90 elbow at 0 pronation-supination 0', choices=[(0, 'Immediate abduction or elbow flexion'), (1, 'Abduction or elbow flexion during movement'), (2, 'Complete flexion 90\xb0, maintains 0\xb0 in elbow')])),
                ('ue_vol_mov_mix_pron_sup', models.IntegerField(verbose_name='Pronation-supination elbow at 90 shoulder at 0', choices=[(0, 'No pronation/supination, starting position impossible'), (1, 'Limited pronation/supination, maintains position'), (2, 'Full pronation/supination, maintains elbow extension')])),
                ('ue_vol_mov_no_syn_shoulder_abd', models.IntegerField(verbose_name='Shoulder abduction 0 - 90 elbow at 0 forearm pronated', choices=[(0, 'Immediate supination or elbow flexion'), (1, 'Supination or elbow flexion during movement'), (2, 'Abduction 90\xb0, maintains extension and pronation')])),
                ('ue_vol_mov_no_syn_shoulder_flex', models.IntegerField(verbose_name='Shoulder flexion 90- 180 elbow at 0pronation-supination 0', choices=[(0, 'Immediate abduction or elbow flexion'), (1, 'Abduction or elbow flexion during movement'), (2, 'Complete flexion, maintains 0\xb0 in elbow')])),
                ('ue_vol_mov_no_syn_pron_sup', models.IntegerField(verbose_name='Pronation/supinationelbow at 0 shoulder at 30-90 flexion', choices=[(0, 'No pronation/supination, starting position impossible'), (1, 'Limited pronation/supination, maintains extension'), (2, 'Full pronation/supination, maintains elbow extension')])),
                ('ue_normal_reflex_activity', models.IntegerField(verbose_name='Normal reflex activity', choices=[(0, '2 of 3 reflexes markedly hyperactive'), (1, '1 reflex markedly hyperactive or at least 2 reflexes lively'), (2, 'Maximum of 1 reflex lively, none hyperactive')])),
                ('ue_normal_reflex_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('ue_wrist_stab_elbow_90', models.IntegerField(verbose_name='Stability at 15 dorsiflexion elbow at 90, forearm pronated shoulder at 0', choices=[(0, 'Less than 15\xb0 active dorsiflexion'), (1, 'Dorsiflexion 15\xb0, no resistance is taken'), (2, 'Maintains position against resistance')])),
                ('ue_wrist_flex_elbow_90', models.IntegerField(verbose_name='Repeated dorsifexion / volar flexion elbow at 90, forearm pronated shoulder at 0, slight finger flexion', choices=[(0, 'Cannot be performed'), (1, 'Can hold position but weak'), (2, 'Maintains position against resistance')])),
                ('ue_wrist_stab_elbow_0', models.IntegerField(verbose_name='Stability at 15 dorsiflexion elbow at 0, forearm pronated slight shoulder flexion/abduction', choices=[(0, 'Less than 15\xb0 active dorsiflexion'), (1, 'Dorsiflexion 15\xb0, no resistance is taken'), (2, 'Maintains position against resistance')])),
                ('ue_wrist_flex_elbow_0', models.IntegerField(verbose_name='Repeated dorsifexion / volar flexion elbow at 0, forearm pronated slight shoulder flexion/abduction', choices=[(0, 'Cannot perform volitionally'), (1, 'Limited active range of motion'), (2, 'Full active range of motion, smoothly')])),
                ('ue_wrist_circumduction', models.IntegerField(verbose_name='Circumduction', choices=[(0, 'Cannot perform volitionally'), (1, 'Jerky movement or incomplete'), (2, 'Complete and smooth circumduction')])),
                ('ue_hand_mass_flex', models.IntegerField(help_text='Close your hand. The therapist can help get the starting position with your fingers in extension', verbose_name='Mass flexion from full active or passive extension', choices=[(0, 'No flexion occurs'), (1, 'Some flexion, but not full motion'), (2, 'Completed active flexion ')])),
                ('ue_hand_mass_ext', models.IntegerField(help_text='Open your hand. The therapist can help get the starting position with your fingers in flexion', verbose_name='Mass flexion from full active or passive flexion', choices=[(0, 'No extension occurs'), (1, 'Patient can release an active mass flexion grasp'), (2, 'Full active extension')])),
                ('ue_hand_flex_pip_dip', models.IntegerField(help_text='Hold my finger and keep it stuck between your fingers', verbose_name='Flexion in PIP and DIP (digits II-V)extension in MCP II-V', choices=[(0, 'Required position cannot be attained'), (1, 'Grasp is weak'), (2, 'Grasp can be maintained against relatively great resistance')])),
                ('ue_hand_thumb_adduction', models.IntegerField(help_text='Ask the patient to perform pure thumb adduction with the scrap of paper interposed between the thumb and first digit. Test this grip against resistance by asking the patient to hold as you attempt to pull the paper out with a slight tug. <strong>Hold the paper between the thumb and forefinger</strong>', verbose_name='Thumb adduction', choices=[(0, 'Function cannot be performed'), (1, 'Scrap of paper interposed between the thumb and index finger can be kept in place, but not against a slight tug'), (2, 'Paper is held firmly against a tug')])),
                ('ue_hand_thumb_opposition', models.IntegerField(help_text='Subject is sitting with arm on bedside table. Instruct the patient to grasp a pen by opposing the thumb and index finger pads around the pen. The pen may not be stabilized by the therapist or the patient\u2019s other hand. Test this grip against resistance by asking the patient to hold as you attempt to pull the pencil out with a slight tug. <strong>Hold the pen and keep it steady</strong>', verbose_name='Opposition pulpa of the thumb against the pulpa of 2-nd finger,pencil, tug upward', choices=[(0, 'Function cannot be performed'), (1, 'A pencil interposed between the thumb pad and the pad of the index finger can be kept in place, but not against a slight tug'), (2, 'Pencil is held firmly against a tug')])),
                ('ue_hand_cylinder_grip', models.IntegerField(help_text='Subject is sitting with arm on bedside table. Instruct the patient to grasp a small can (placed upright on a table without stabilization) by opening the fingers and opposing the volar surfaces of the thumb and digits. The arm may be supported but the tester may not assist with hand function. Test this grip against resistance by asking the patient to hold as you attempt to pull the can out with a slight tug.<strong>Hold the object and keep it steady</strong>', verbose_name='Cylinder shaped object (small can)tug upward, opposition in digits I and II', choices=[(0, 'Function cannot be performed'), (1, 'A can interposed between the thumb and index finger can be kept in place, but not against a slight tug'), (2, 'Can is held firmly against a tug')])),
                ('ue_hand_spherical_grip', models.IntegerField(help_text='Subject is sitting with arm on bedside table. Instruct the patient to perform a spherical grasp by grasping a tennis ball The tester may support the patient\u2019s arm but may not assist with the hand function required for the retrieval task. Test this grip against resistance by asking the patient to hold as you attempt to pull the ball out with a slight tug. <strong>Hold the ball and keep it steady</strong>', verbose_name='Fingers in abduction/flexion, thumb opposed, tennis ball', choices=[(0, 'Function cannot be performed'), (1, 'A tennis ball can be kept in place with a spherical grasp, but not against a slight tug'), (2, 'Tennis ball is held firmly against a tug')])),
                ('ue_coord_speed_tremor', models.IntegerField(verbose_name='Tremor', choices=[(0, 'Marked tremor'), (1, 'Slight tremor'), (2, 'No tremor')])),
                ('ue_coord_speed_dysmetria', models.IntegerField(verbose_name='Dysmetria', choices=[(0, 'Pronounced or unsystematic dysmetria'), (1, 'Slight or systematic dysmetria'), (2, 'No dysmetria')])),
                ('ue_coord_speed_time', models.IntegerField(verbose_name='Speed', choices=[(0, 'Activity is more than 5 seconds longer than unaffected hand'), (1, '(2-5) seconds longer than unaffected side'), (2, 'Less than 2 seconds difference')])),
                ('le_reflex_activity_achilles', models.IntegerField(verbose_name='Achilles', choices=[(0, 'No reflex activity can be elicited'), (2, 'Reflex activity can be elicited')])),
                ('le_reflex_activity_pattelar', models.IntegerField(verbose_name='Patellar', choices=[(0, 'No reflex activity can be elicited'), (2, 'Reflex activity can be elicited')])),
                ('le_reflex_activity_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_reflex_activity_achilles_pattelar', models.IntegerField(verbose_name='Achilles and patellar reflexes', choices=[(0, 'At least 2 of the 3 phasic reflexes are markedly hyperactive'), (1, 'One reflex is markedly hyperactive or at least 2 reflexes are lively'), (2, 'No more than one reflex is lively and none are hyperactive')])),
                ('le_reflex_activity_achilles_pattelar_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_vol_mov_syn_hip_flexion', models.IntegerField(verbose_name='Hip flexion', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_knee_flexion', models.IntegerField(verbose_name='Knee flexion', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_ankle_dorsiflexion', models.IntegerField(verbose_name='Ankle dorsiflexion', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_flexion_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_vol_mov_syn_hip_extension', models.IntegerField(verbose_name='Hip extension', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_hip_adduction', models.IntegerField(verbose_name='Hip adduction', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_knee_extension', models.IntegerField(verbose_name='Knee extension', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_ankle_flexion', models.IntegerField(verbose_name='Ankle plantarflexion', choices=[(0, 'Cannot be performed at all'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_syn_extension_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_vol_mov_mix_syn_knee', models.IntegerField(verbose_name='Knee Flexion sitting', choices=[(0, 'No active motion'), (1, 'From slightly extended position, knee can be flexed but not beyond 90\xb0'), (2, 'Knee flexion beyond 90\xb0')])),
                ('le_vol_mov_mix_syn_knee_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_vol_mov_mix_syn_ankle', models.IntegerField(verbose_name='Ankle Dorsiflexion sitting', choices=[(0, 'No active motion'), (1, 'Incomplete active flexion'), (2, 'Normal dorsiflexion')])),
                ('le_vol_mov_mix_syn_ankle_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_vol_mov_no_syn_knee', models.IntegerField(verbose_name='Knee Flexion standing', choices=[(0, 'Knee cannot flex without hip flexion'), (1, 'Knee flexion begins without hip flexion but does not reach to 90\xb0 or hip begins to flex in later phase of motion'), (2, 'Knee flexion beyond 90 degrees with hip maintained in extension')])),
                ('le_vol_mov_no_syn_knee_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_vol_mov_no_syn_ankle', models.IntegerField(verbose_name='Ankle Dorsiflexion standing', choices=[(0, 'No active motion'), (1, 'Partial motion'), (2, 'Full motion')])),
                ('le_vol_mov_no_syn_ankle_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_coord_speed_tremor', models.IntegerField(verbose_name='Scoring Tremor', choices=[(0, 'Marked tremor'), (1, 'Slight tremor'), (2, 'No tremor')])),
                ('le_coord_speed_dysmetria', models.IntegerField(verbose_name='Scoring Dysmetria', choices=[(0, 'Pronounced or unsystematic dysmetria'), (1, 'Slight or systematic dysmetria'), (2, 'No dysmetria')])),
                ('le_coord_speed_time', models.IntegerField(verbose_name='Scoring Speed', choices=[(0, 'Activity is more than 6 seconds longer than unaffected leg'), (1, ' 2-5.9 seconds longer than unaffected leg'), (2, 'less than 2 seconds difference')])),
                ('le_coord_speed_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('ue_total_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
                ('le_total_obs', models.TextField(max_length=500, null=True, verbose_name='Notes', blank=True)),
            ],
            options={
                'ordering': ['patient'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HAD',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('tension', models.IntegerField(verbose_name='I feel tense or "wound up"', choices=[(3, 'Most of the time'), (2, 'A lot of time'), (1, 'From time to time, occasionally'), (0, 'Not at all')])),
                ('enjoy', models.IntegerField(verbose_name='I still enjoy the things I used to enjoy', choices=[(3, 'Hardly at all'), (2, 'Only a little'), (1, 'Not quite so much'), (0, 'Definitely as much')])),
                ('frightened', models.IntegerField(verbose_name='I get a sort of frightened feeling as if something awful is about to happen', choices=[(3, 'Very definitely and quite badly'), (2, 'Yes, but not too badly'), (1, "A little, but it doesn't worry me"), (0, 'Not at all')])),
                ('laugh', models.IntegerField(verbose_name='I can laugh and see the funny side of things', choices=[(3, 'Not at all'), (2, 'Definitely not so much now'), (1, 'Not quite so much now'), (0, 'As much as I always could')])),
                ('worry', models.IntegerField(verbose_name='Worrying thoughts go through my mind', choices=[(3, 'A great deal of the time'), (2, 'A lot of the time'), (1, 'From time to time, but not too often'), (0, 'Only occasionally')])),
                ('cheerful', models.IntegerField(verbose_name='I feel cheerful', choices=[(3, 'Not at all'), (2, 'Not often'), (1, 'Sometimes'), (0, 'Most of the time')])),
                ('ease', models.IntegerField(verbose_name='I can sit at ease and feel relaxed', choices=[(3, 'Not at all'), (2, 'Not often'), (1, 'Usually'), (0, 'Definitely')])),
                ('slowed', models.IntegerField(verbose_name='I feel as if I am slowed down', choices=[(3, 'Nearly all the time'), (2, 'Very often'), (1, 'Sometimes'), (0, 'Not at all')])),
                ('butterflies', models.IntegerField(verbose_name="I get a sort of frightened feeling like 'butterflies' in the stomach", choices=[(3, 'Very Often'), (2, 'Quite Often'), (1, 'Occasionally'), (0, 'Not at all')])),
                ('appearance', models.IntegerField(verbose_name='I have lost interest in my appearance', choices=[(3, 'Definitely'), (2, "I don't take as much care as I should"), (1, 'I may not take quite as much care'), (0, 'I take just as much care as ever')])),
                ('restless', models.IntegerField(verbose_name='I feel restless as I have to be on the move', choices=[(3, 'Very much indeed'), (2, 'Quite a lot'), (1, 'Not very much'), (0, 'Not at all')])),
                ('forward', models.IntegerField(verbose_name='I look forward with enjoyment to things', choices=[(3, 'Hardly at all'), (2, 'Definitely less than I used to'), (1, 'Rather less than I used to'), (0, 'As much as I ever did')])),
                ('panic', models.IntegerField(verbose_name='I get sudden feelings of panic', choices=[(3, 'Very often indeed'), (2, 'Quite often'), (1, 'Not very often'), (0, 'Not at all')])),
                ('book', models.IntegerField(verbose_name='I can enjoy a good book or radio or TV program', choices=[(3, 'Very seldom'), (2, 'Not often'), (1, 'Sometimes'), (0, 'Often')])),
            ],
            options={
                'verbose_name': 'HAD',
                'verbose_name_plural': 'HADs',
            },
        ),
        migrations.CreateModel(
            name='Hamilton',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('mood', models.IntegerField(verbose_name='depressed mood (sadness, hopeless, helpless, worthless)', choices=[(0, 'Absent'), (1, 'These feelings are indicated only on questioning'), (2, 'These feelings are spontaneously reported verbally'), (3, 'Communicates feelings non-verbally i.e., through facial expression, posture, voice, and tendency to weep'), (4, 'Patient reports VIRTUALLY ONLY these feelings in his spontaneous verbal and non-verbal communication')])),
                ('guilt', models.IntegerField(verbose_name='feelings of guilt', choices=[(0, 'Absent'), (1, 'Self reproach, feels he has let people down'), (2, 'Ideas of guilt or rumination over past errors or sinful deed'), (3, 'Present illness is a punishmnent. Delusions of guilt'), (4, 'Hears accusatory or denunciatory voices and/or experiences threatening visual hallucinations')])),
                ('suicide', models.IntegerField(verbose_name='suicide', choices=[(0, 'Absent'), (1, 'Feels life is not worth living'), (2, 'Wishes he were dead or any thoughts of possible death to self'), (3, 'Suicide ideas or gesture'), (4, 'Attempts at suicide (any serious attempt rates)')])),
                ('insomnia_early', models.IntegerField(verbose_name='insomnia early', choices=[(0, 'No difficulty falling asleep'), (1, 'Complains of occasional difficulty falling asleep - more than 1/2 hour'), (2, 'Complains of nightly difficulty falling asleep')])),
                ('insomnia_middle', models.IntegerField(verbose_name='insomnia middle', choices=[(0, 'No difficulty'), (1, 'Patient complains of being restless and disturbed during the night'), (2, 'Waking during the night - any getting out of bed (except for purposes of voiding)')])),
                ('insomnia_late', models.IntegerField(verbose_name='insomnia late', choices=[(0, 'No difficulty'), (1, 'Waking in early hours of the morning but goes back to sleep'), (2, 'Unable to fall asleep again if he gets out of bed')])),
                ('work', models.IntegerField(verbose_name='work and activities', choices=[(0, 'No difficulty'), (1, 'Thoughts and feelings of incapacity, fatigue or weakness related to activities (work or hobbies)'), (2, 'Loss of interest in activities (hobbies or work) - either directly reported by patient, or indirectly in listlessness, indecision and vacillation (feels he has to push himself to work or do activities)'), (3, 'Decrease in actual time spent in activities or decrease in productivity. In hospital, if patient does not spend at least three hours a day in activities (hospital job or hobbies) exclusive of ward chores'), (4, 'Stopped working because of present illness. In hospital, if patient engages in no activities except ward chores, or if patient fails to perform ward chores unassisted')])),
                ('retardation', models.IntegerField(verbose_name='retardation: psychomotor (slowness of thought and speech; impaired ability to concentrate; decreased motor activity)', choices=[(0, 'Normal speech and thought'), (1, 'Slight retardation at interview'), (2, 'Obvious retardation at interview'), (3, 'Interview difficult'), (4, 'Complete stupor')])),
                ('agitation', models.IntegerField(verbose_name='agitation', choices=[(0, 'None'), (1, 'Fidgetiness'), (2, 'Playing with hands, hair,etc'), (3, "Moving about, can't sit still"), (4, 'Hand wringing, nail biting, hair-pulling, biting of lips')])),
                ('anxiety_psychic', models.IntegerField(verbose_name='anxiety: psychic', choices=[(0, 'No difficulty'), (1, 'Subjective tension and irritability'), (2, 'Worrying about minor matters'), (3, 'Apprehensive attitude apparent in face or speech'), (4, 'Fears expressed without questioning')])),
                ('anxiety_somatic', models.IntegerField(verbose_name='anxiety: somatic (physiological concomitants of anxiety, such as - gastro-intestinal: dry mouth, wind, indigestion, diarrhea, cramps, belching. - cardio-vascular : palpitations, headaches. - respiratory: hyperventilation, sighing. - urinary frequency - sweating)', choices=[(0, 'Absent'), (1, 'Mild'), (2, 'Moderate'), (3, 'Severe'), (4, 'Incapacitating')])),
                ('gastro', models.IntegerField(verbose_name='somatic symptoms: gastrointestinal', choices=[(0, 'None'), (1, 'Loss of appetite but eating without staff encouragement. Heavy feelings in abdomen'), (2, 'Difficulty eating without staff urging. Requests or requires laxatives or medication for bowels or medication for gastro-intestinal symptoms')])),
                ('general', models.IntegerField(verbose_name='somatic symptoms: general', choices=[(0, 'None'), (1, 'Heaviness in limbs, back or head. Backaches, headache, muscle aches. Loss of energy and fatigability'), (2, 'Any clear-cut symptom')])),
                ('genital', models.IntegerField(verbose_name='genital symptoms (loss of libido, menstrual disturbances)', choices=[(0, 'Absent'), (1, 'Mild'), (2, 'Severe')])),
                ('hypochondriasis', models.IntegerField(verbose_name='hypochondriasis', choices=[(0, 'Not present'), (1, 'Self-absorption (bodily)'), (2, 'Preoccupation with health'), (3, 'Frequent complaints, requests for help, etc. ...'), (4, 'Hypochondriacal delusions')])),
                ('weight_history', models.IntegerField(verbose_name='loss of weight', choices=[(0, 'No weight loss'), (1, 'Probable weight loss associated with present illness'), (2, 'Definite (according to patient) weight loss'), (3, 'Not assessed')])),
                ('weight_weekly', models.IntegerField(verbose_name='loss of weight', choices=[(0, 'No weight loss'), (1, 'Probable weight loss associated with present illness (>500g/week)'), (2, 'Definite weight loss(>1kg/week)')])),
                ('insight', models.IntegerField(verbose_name='insight', choices=[(0, 'Not depressed (based on above items) OR Acknowledges being depressed and ill'), (1, 'Acknowledges illness but attributes cause to bad food, climate, overwork, virus, need for rest, etc.'), (2, 'Denies being ill at all')])),
            ],
            options={
                'verbose_name': 'Hamilton',
                'verbose_name_plural': 'Hamiltons',
            },
        ),
        migrations.CreateModel(
            name='KVIQ',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('dominant_limb', models.IntegerField(verbose_name='Dominant limb', choices=[(0, 'Left'), (1, 'Right')])),
                ('neck_visual_images', models.IntegerField(verbose_name='Neck visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('neck_cine_images', models.IntegerField(verbose_name='Neck cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('shoulder_elevation_visual_images', models.IntegerField(verbose_name='Shoulder elevation visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('shoulder_elevation_cine_images', models.IntegerField(verbose_name='Shoulder elevation cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('shoulder_flexion_dom_visual_images', models.IntegerField(verbose_name='Shoulder flexion dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('shoulder_flexion_dom_cine_images', models.IntegerField(verbose_name='Shoulder flexion dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('shoulder_flexion_not_dom_visual_images', models.IntegerField(verbose_name='Shoulder flexion not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('shoulder_flexion_not_dom_cine_images', models.IntegerField(verbose_name='Shoulder flexion not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('elbow_dom_visual_images', models.IntegerField(verbose_name='Elbow dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('elbow_dom_cine_images', models.IntegerField(verbose_name='Elbow dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('elbow_not_dom_visual_images', models.IntegerField(verbose_name='Elbow not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('elbow_not_dom_cine_images', models.IntegerField(verbose_name='Elbow not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('thumb_dom_visual_images', models.IntegerField(verbose_name='Thumb dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('thumb_dom_cine_images', models.IntegerField(verbose_name='Thumb dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('thumb_not_dom_visual_images', models.IntegerField(verbose_name='Thumb not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('thumb_not_dom_cine_images', models.IntegerField(verbose_name='Thumb not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('trunk_visual_images', models.IntegerField(verbose_name='Trunk visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('trunk_cine_images', models.IntegerField(verbose_name='Trunk cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('knee_dom_visual_images', models.IntegerField(verbose_name='Knee dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('knee_dom_cine_images', models.IntegerField(verbose_name='Knee dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('knee_not_dom_visual_images', models.IntegerField(verbose_name='Knee not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('knee_not_dom_cine_images', models.IntegerField(verbose_name='Knee not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('hip_dom_visual_images', models.IntegerField(verbose_name='Hip dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('hip_dom_cine_images', models.IntegerField(verbose_name='Hip dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('hip_not_dom_visual_images', models.IntegerField(verbose_name='Hip not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('hip_not_dom_cine_images', models.IntegerField(verbose_name='Hip not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('foot_tapping_dom_visual_images', models.IntegerField(verbose_name='Foot tapping dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('foot_tapping_dom_cine_images', models.IntegerField(verbose_name='Foot tapping dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('foot_tapping_not_dom_visual_images', models.IntegerField(verbose_name='Foot tapping not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('foot_tapping_not_dom_cine_images', models.IntegerField(verbose_name='Foot tapping not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('foot_rotation_dom_visual_images', models.IntegerField(verbose_name='Foot rotation dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('foot_rotation_dom_cine_images', models.IntegerField(verbose_name='Foot rotation dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
                ('foot_rotation_not_dom_visual_images', models.IntegerField(verbose_name='Foot rotation not dominant visual images', choices=[(5, 'Image as clear as seeing'), (4, 'Clear image'), (3, 'Moderately clear image'), (2, 'Blurred image'), (1, 'No image'), (-10000, 'NT')])),
                ('foot_rotation_not_dom_cine_images', models.IntegerField(verbose_name='Foot rotation not dominant cine images', choices=[(5, 'As intense as performing the action'), (4, 'Intense'), (3, 'Moderately intense'), (2, 'Slightly intense'), (1, 'No sensation'), (-10000, 'NT')])),
            ],
            options={
                'ordering': ['patient'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('birthdate', models.DateField(null=True, blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('period', models.CharField(max_length=40)),
                ('parent', models.ForeignKey(related_name='child', verbose_name='Parent', blank=True, to='evaluation.Period', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SIS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('obs', models.TextField(max_length=500, null=True, blank=True)),
                ('strength_arm', models.IntegerField(verbose_name='a. Arm that was most affected', choices=[(5, 'A lot of strength'), (4, 'Quite a bit of strength'), (3, 'Some strength'), (2, 'A little strength'), (1, 'No strength at all')])),
                ('strength_hand', models.IntegerField(verbose_name='b. Grip of your hand that was most affected', choices=[(5, 'A lot of strength'), (4, 'Quite a bit of strength'), (3, 'Some strength'), (2, 'A little strength'), (1, 'No strength at all')])),
                ('strength_leg', models.IntegerField(verbose_name='c. Leg that was most affected', choices=[(5, 'A lot of strength'), (4, 'Quite a bit of strength'), (3, 'Some strength'), (2, 'A little strength'), (1, 'No strength at all')])),
                ('strength_foot', models.IntegerField(verbose_name='d. Foot/ankle that was most affected', choices=[(5, 'A lot of strength'), (4, 'Quite a bit of strength'), (3, 'Some strength'), (2, 'A little strength'), (1, 'No strength at all')])),
                ('dificulty_remember_ppl_told', models.IntegerField(verbose_name='a. Remember things that people just told you?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('dificulty_remember_happ_day_bef', models.IntegerField(verbose_name='b. Remember things that happened the day before?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('dificulty_remember_do_things', models.IntegerField(verbose_name='c. Remember to do things (e.g. keep scheduled appointments or take medication)?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('dificulty_remember_day_week', models.IntegerField(verbose_name='d. Remember the day of the week?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('dificulty_concentrate', models.IntegerField(verbose_name='e. Concentrate?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('dificulty_think_quickly', models.IntegerField(verbose_name='f. Think quickly?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('dificulty_solve_problems', models.IntegerField(verbose_name='g. Solve everyday problems?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('mood_feel_sad', models.IntegerField(verbose_name='a. Feel sad?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_nobody_close', models.IntegerField(verbose_name='b. Feel that there is nobody you are close to?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_burden', models.IntegerField(verbose_name='c. Feel that you are a burden to others?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_nothing_to_look_fwd', models.IntegerField(verbose_name='d. Feel that you have nothing to look forward to?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_blame_mistakes', models.IntegerField(verbose_name='e. Blame yourself for mistakes that you made?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_enjoy_things', models.IntegerField(verbose_name='f. Enjoy things as much as ever?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_feel_nervous', models.IntegerField(verbose_name='g. Feel quite nervous?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_feel_worth_living', models.IntegerField(verbose_name='h. Feel that life is worth living?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('mood_smile_laugh', models.IntegerField(verbose_name='i. Smile and laugh at least once a day?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('communication_say_name', models.IntegerField(verbose_name='a. Say the name of someone who was in front of you?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('communication_understand', models.IntegerField(verbose_name='b. Understand what was being said to you in a conversation?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('communication_reply', models.IntegerField(verbose_name='c. Reply to questions?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('communication_name_objs', models.IntegerField(verbose_name='d. Correctly name objects?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('communication_group_conversation', models.IntegerField(verbose_name='e. Participate in a conversation with a group of people?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('communication_tel_conversation', models.IntegerField(verbose_name='f. Have a conversation on the telephone? ', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('communication_tel_call', models.IntegerField(verbose_name='g. Call another person on the telephone, including selecting the correct phone number and dialing?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Extremely difficult')])),
                ('activities_cut_food', models.IntegerField(verbose_name='a. Cut your food with a knife and fork?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_dress', models.IntegerField(verbose_name='b. Dress the top part of your body?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_bathe', models.IntegerField(verbose_name='c. Bathe yourself?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_clip_toenails', models.IntegerField(verbose_name='d. Clip your toenails?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_toilet', models.IntegerField(verbose_name='e. Get to the toilet on time?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_control_bladder', models.IntegerField(verbose_name='f. Control your bladder (not have an accident)?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_control_bowels', models.IntegerField(verbose_name='g. Control your bowels (not have an accident)?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_light_household', models.IntegerField(verbose_name='h. Do light household tasks/chores(e.g. dust, make a bed, take out garbage, do the dishes)?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_shopping', models.IntegerField(verbose_name='i. Go shopping?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('activities_heavy_household', models.IntegerField(verbose_name='j. Do heavy household chores (e.g.vacuum, laundry or yard work)?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_sitting', models.IntegerField(verbose_name='a. Stay sitting without losing your balance?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_standing', models.IntegerField(verbose_name='b. Stay standing without losing your balance?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_walk_balance', models.IntegerField(verbose_name='c. Walk without losing your balance?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_bed_chair', models.IntegerField(verbose_name='d. Move from a bed to a chair?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_walk_one_block', models.IntegerField(verbose_name='e. Walk one block?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_walk_fast', models.IntegerField(verbose_name='f. Walk fast?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_climb_one_flight', models.IntegerField(verbose_name='g. Climb one flight of stairs?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_climb_several_flights', models.IntegerField(verbose_name='h. Climb several flights of stairs?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('mobile_in_out_car', models.IntegerField(verbose_name='i. Get in and out of a car?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('hand_carry_heavy_objs', models.IntegerField(verbose_name='a. Carry heavy objects (e.g. bag of groceries)?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('hand_turn_doorknob', models.IntegerField(verbose_name='b. Turn a doorknob?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('hand_open_jar', models.IntegerField(verbose_name='c. Open a can or jar?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('hand_tie_shoe_lace', models.IntegerField(verbose_name='d. Tie a shoe lace?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('hand_pick_dime', models.IntegerField(verbose_name='e. Pick up a dime?', choices=[(5, 'Not difficult at all'), (4, 'A little difficult'), (3, 'Somewhat difficult'), (2, 'Very difficult'), (1, 'Could not do at all')])),
                ('time_work', models.IntegerField(verbose_name='a. Your work (paid, voluntary or other)', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_social', models.IntegerField(verbose_name='b. Your social activities?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_quiet_recreation', models.IntegerField(verbose_name='c. Quiet recreation (crafts, reading)?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_active_recreation', models.IntegerField(verbose_name='d. Active recreation (sports, outings,travel)?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_family', models.IntegerField(verbose_name='e. Your role as a family member and/or friend?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_spiritual', models.IntegerField(verbose_name='f. Your participation in spiritual or religious activities?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_control_life', models.IntegerField(verbose_name='g. Your ability to control your life as you wish?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('time_help_others', models.IntegerField(verbose_name='h. Your ability to help others?', choices=[(5, 'None of the time'), (4, 'A little of the time'), (3, 'Some of the time'), (2, 'Most of the time'), (1, 'All of the time')])),
                ('scale_recovery', models.IntegerField()),
                ('patient', models.ForeignKey(verbose_name='Patient', to='evaluation.Patient')),
                ('period', models.ForeignKey(verbose_name='Period', to='evaluation.Period')),
            ],
            options={
                'ordering': ['patient'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='kviq',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='kviq',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='hamilton',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='hamilton',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='had',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='had',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='fuglmeyer',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='fuglmeyer',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='fim',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='fim',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='eeg',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='eeg',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='clin',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='clin',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
        migrations.AddField(
            model_name='bostonaphasia',
            name='patient',
            field=models.ForeignKey(verbose_name='Patient', to='evaluation.Patient'),
        ),
        migrations.AddField(
            model_name='bostonaphasia',
            name='period',
            field=models.ForeignKey(verbose_name='Period', to='evaluation.Period'),
        ),
    ]
